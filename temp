
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/ioctl.h>
#include <linux/if.h>
#include <linux/if_tun.h>

int main() {
    struct ifreq ifr;
    int fd;

    // Open the tun device file
    if ((fd = open("/dev/net/tun", O_RDWR)) < 0) {
        perror("open /dev/net/tun");
        return 1;
    }

    // Bind to an existing tun0 interface
    memset(&ifr, 0, sizeof(ifr));
    ifr.ifr_flags = IFF_TUN | IFF_NO_PI;   // TUN = IP packets, no packet info
    strcpy(ifr.ifr_name, "tun0");          // Use manually created tun0

    if (ioctl(fd, TUNSETIFF, (void *)&ifr) < 0) {
        perror("ioctl(TUNSETIFF)");
        close(fd);
        return 1;
    }

    printf("Attached to interface %s\n", ifr.ifr_name);

    char buf[1500];
    while (1) {
        int nread = read(fd, buf, sizeof(buf));
        if (nread < 0) {
            perror("read");
            break;
        }
        printf("Read %d bytes from %s\n", nread, ifr.ifr_name);

        // Echo back the same packet
        int nwrite = write(fd, buf, nread);
        if (nwrite < 0) {
            perror("write");
            break;
        }
    }

    close(fd);
    return 0;
}

